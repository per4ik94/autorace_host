<launch>
    <!-- launch turtlebot3_autorace_camera_calibration.launch in the raspberry pi before launch this file -->
    <arg name="mode" default="action" doc="mode type [calibration, action]"/>
    <group ns="camera">
        <!-- image brightness & contrast compensation of ground-projected image -->
        <node pkg="turtlebot3_autorace_camera" type="image_compensation" name="image_compensation" output="screen">
            <rosparam command="load" file="$(find autorace_host)/calibration/extrinsic_calibration/compensation.yaml"/>
            <param if="$(eval mode == 'calibration')" name="/is_extrinsic_camera_calibration_mode" value="True"/>
            <param if="$(eval mode == 'action')" name="/is_extrinsic_camera_calibration_mode" value="False"/>
            <remap from="/camera/image_input" to="/camera/image_rect_color"/>
            <remap from="/camera/image_input/compressed" to="/camera/image_rect_color/compressed"/>
            <remap from="/camera/image_output" to="/camera/image_compensated"/>
            <remap from="/camera/image_output/compressed" to="/camera/image_compensated/compressed"/>
        </node>

        <!-- image ground projection -->
        <node pkg="turtlebot3_autorace_camera" type="image_projection" name="image_projection" output="screen">
            <rosparam command="load" file="$(find autorace_host)/calibration/extrinsic_calibration/projection.yaml"/>
            <param if="$(eval mode == 'calibration')" name="/is_extrinsic_camera_calibration_mode" value="True"/>
            <param if="$(eval mode == 'action')" name="/is_extrinsic_camera_calibration_mode" value="False"/>
            <remap from="/camera/image_input" to="/camera/image_rect_color"/>
            <remap from="/camera/image_input/compressed" to="/camera/image_rect_color/compressed"/>
            <remap from="/camera/image_output" to="/camera/image_projected"/>
            <remap from="/camera/image_output/compressed" to="/camera/image_projected/compressed"/>
            <remap from="/camera/image_calib" to="/camera/image_extrinsic_calib"/>
            <remap from="/camera/image_calib/compressed" to="/camera/image_extrinsic_calib/compressed"/>
        </node>

        <!-- image brightness & contrast compensation of ground-projected image -->
        <node pkg="turtlebot3_autorace_camera" type="image_compensation" name="image_compensation_projection"
              output="screen">
            <rosparam command="load" file="$(find autorace_host)/calibration/extrinsic_calibration/compensation.yaml"/>
            <param if="$(eval mode == 'calibration')" name="/is_extrinsic_camera_calibration_mode" value="True"/>
            <param if="$(eval mode == 'action')" name="/is_extrinsic_camera_calibration_mode" value="False"/>
            <remap from="/camera/image_input" to="/camera/image_projected"/>
            <remap from="/camera/image_input/compressed" to="/camera/image_projected/compressed"/>
            <remap from="/camera/image_output" to="/camera/image_projected_compensated"/>
            <remap from="/camera/image_output/compressed" to="/camera/image_projected_compensated/compressed"/>
        </node>
    </group>


    <!-- launch extrinsic_camera_calibration.launch before launch this file -->


    <!-- lane detection -->
    <node pkg="turtlebot3_autorace_detect" type="detect_lane" name="detect_lane" output="screen">
        <rosparam command="load" file="$(find autorace_host)/param/lane/lane.yaml"/>
        <param if="$(eval mode == 'calibration')" name="/is_detection_calibration_mode" value="True"/>
        <param if="$(eval mode == 'action')" name="/is_detection_calibration_mode" value="False"/>
        <remap from="/detect/image_input" to="/camera/image_projected_compensated"/>
        <remap from="/detect/image_input/compressed" to="/camera/image_projected_compensated/compressed"/>
        <remap from="/detect/image_output" to="/detect/image_lane"/>
        <remap from="/detect/image_output/compressed" to="/detect/image_lane/compressed"/>
        <remap from="/detect/image_output_sub1" to="/detect/image_white_lane_marker"/>
        <remap from="/detect/image_output_sub1/compressed" to="/detect/image_white_lane_marker/compressed"/>
        <remap from="/detect/image_output_sub2" to="/detect/image_yellow_lane_marker"/>
        <remap from="/detect/image_output_sub2/compressed" to="/detect/image_yellow_lane_marker/compressed"/>
    </node>

    <!-- launch turtlebot3_autorace_detect_lane.launch before launch this file -->

    <!-- lane control -->
    <node pkg="turtlebot3_autorace_driving" type="control_lane" name="control_lane" output="screen">
        <remap from="/control/lane" to="/detect/lane"/>
        <remap from="/control/cmd_vel" to="/cmd_vel"/>
    </node>
</launch>